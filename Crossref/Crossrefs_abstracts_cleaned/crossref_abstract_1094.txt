 Microservice-based software networks consist of a large number of critical, multidisciplinary, and interdependent elements in which the failure of critical microservices will have a destructive effect on the system reliability and resiliency. We overcome this problem by identifying critical microservices that play a vital role and then propose a fault-tolerant candidate for each critical microservice. The approach finds critical microservices based on the proposed parameter-based greedy strategies and analyzes the vulnerability of the software design in terms of resiliency while removing the important microservices from the software network. We examine our proposed microservice architectural style to fit the requirements of a smart city in cloud-native applications using a new metric introduced in terms of a microservice runtime degree (RD) and aggregative importance links. The results show the decline rate of network efficiency is maximum with removing the nodes based on this new structural metric. Furthermore, the resilience loss triangle metric based on RD, which corresponds to the shaded area between the expected and full performance of the observed curves, will have a greater value than other metrics. 