 One of the interesting features of software systems is that a large number of soft-errors are inherently derated (masked) at the software level. The rate of error-deration may depend on the inherent features of design and programming structures used in the software. This paper investigates the inherent effects of different programming structures on the program resiliency; to this end, six different benchmark programs were implemented by four different programming methods and structures. Profiling experiments were performed on the benchmarks to identify those features of the programming structures that affect the rate of error-deration; then, in order to quantify and examine the inherent resiliency of the programming structures, about 6,720,000 faults were injected into the benchmark programs. The results reveal that about 42.67% of faults in the programs implemented based on while loop-structure are derated; this figure for the programs implemented based on do-while, for and recursive structures are respectively 42.18%, 40.22% and 31.66%. The programs based on the while loop-structure have about 11.01% higher resiliency than the recursive programs. These results can enable software designers to select the most resilient loop-structures for developing inherently resilient programs. 